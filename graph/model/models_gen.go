// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

type CumulativeGrade struct {
	Subject         *Subject `json:"subject"`
	CumulativeScore float64  `json:"cumulativeScore"`
	CumulativeGrade string   `json:"cumulativeGrade"`
}

type Mutation struct {
}

type Query struct {
}

type Student struct {
	ID                string             `json:"id"`
	Name              string             `json:"name"`
	TermGrades        []*TermGrade       `json:"termGrades"`
	SubjectCumulative []*CumulativeGrade `json:"subjectCumulative"`
	CumulativeScore   *float64           `json:"cumulativeScore,omitempty"`
	FinalGrade        *string            `json:"finalGrade,omitempty"`
	ClassPosition     *int               `json:"classPosition,omitempty"`
}

type Subject struct {
	ID   string `json:"id"`
	Name string `json:"name"`
}

type SubjectGrade struct {
	Subject    *Subject `json:"Subject"`
	Ca1        float64  `json:"CA1"`
	Ca2        float64  `json:"CA2"`
	Obj        float64  `json:"OBJ"`
	Theo       float64  `json:"THEO"`
	TotalMarks float64  `json:"TotalMarks"`
	Grade      string   `json:"Grade"`
	Position   string   `json:"Position"`
}

type SubjectGradeInput struct {
	SubjectID string  `json:"subjectId"`
	Ca1       float64 `json:"ca1"`
	Ca2       float64 `json:"ca2"`
	Obj       float64 `json:"obj"`
	Theo      float64 `json:"theo"`
}

type Term struct {
	ID   string `json:"id"`
	Name string `json:"name"`
}

type TermGrade struct {
	ID           string          `json:"id"`
	Student      *Student        `json:"Student"`
	Term         *Term           `json:"Term"`
	TotalMarks   float64         `json:"TotalMarks"`
	AverageMarks float64         `json:"AverageMarks"`
	Subjects     []*SubjectGrade `json:"Subjects"`
}
